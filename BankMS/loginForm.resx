<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bankLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="bunifuThinButton21.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAARgAAAArCAYAAACjF5c7AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAJESURBVHhe7d1NS1RhGMfhPqJQhGkvi4h2QasW0SZcRF8h
        qGXQRwimMiuiKEnblFCbCotAhCIq4u7czxkHnTkjozPPyusP10I86u7HecEzx8LMrNIExsyqTWDMrNoE
        xsyqTWDMrNoExsyqbd/A/Il/sRKbsRRrcTlextnmq7l4ABxh2YHswbVYjV58iR/xt1+M0Y0NzOv4Hqfj
        cSw05ppf0/WHgKOsF/NNHxYb9+Nzvxx7NxKYrNGNWG/i4mwFmExG5kq8iq343S9Juz2BybhciKdxIh52
        /hKA8XqlH1/jV78oQ4HJMxdxAaaR92d2NghMe8/FZREwnVOxHHfjQ+lKCUw+Lcobul0HAxxU9uRT/GwD
        k4+a8m5w14EAB5W3Wm7HRhuYfJ7tUTQwSxfjWRuY8/Gk8wCAwzrenMWUwJyMR50HAEyjBKbrGwDTEhig
        GoEBqhEYoBqBAaoRGKAagQGqERigGoEBqhEYoJoSmPyfga5vAkyjBManBQA1lMDky3q9rgGYpXxLQwnM
        vfjoP6qBGerFzXjbBibfAu6VmcCs5OepPY9vbWByd2Ij5mO582CASeXrMq/Hm9KVQWDyxd+X4kXnDwBM
        6lysDD5OdhCYXL4F3BMl4LDONP1Yj61+UYYCk3sX2+XT2dz0BSaVl0V55rI7LrmRwOTyculWvI/Fcjbj
        8TUwTq/c0L0aq4PLot3rDMzOskb5qGnBzV9gSF7lLMVacxqy2S/G6PYNjJnZNBMYM6s2gTGzahMYM6s2
        gTGzSov4D9Q4Gs34k3l4AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>